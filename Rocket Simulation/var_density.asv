% This a function that introduces variability in the density as the rocket
% travels upward

% INPUT: h altitude (m)
% OUTPUT: rho density (kg/m^3)

function rho = var_density(h)
%
% Defining Constants
%
h_atm = [10999 19999 32000 46999 50999 70999 85000]; %Altitude for each region
a = [-6.5 0 1 2.8 0 -2.8 -2]; % Lapse rate for each region
g = 9.807; % Gravitational acceleration [m/s^2]
rho0 = 1.225; % Density at sea level [kg/m^3]
T0 = 288.15; % Temperature at sea level [K]
a0 = -6.5;
% P0 = 101325; % Pressure at sea level [Pa]
R = 287.057; % Gas constant of air [J/(kg*K)]

T = 1:7;
T(1) = T0 + (a0*(h_atm(1)/1000));
T(2) = T(1);
T(3) = T(2) + a(3)*((h_atm(3)-h_atm(2))/1000);
T(4) = T(3) + a(4)*((h_atm(4)-h_atm(3))/1000);
T(5) = T(4) + a(5)*(h_atm(5)/1000);
T(6) = T(5) + a(6)*((h_atm(6)-h_atm(5))/1000);
T(7) = T(6) + a(7)*((h_atm(7)-h_atm(6))/1000);

rho = 1:7;
rho(1) = rho0*((T(1)/T0)^(-g/(a0*(R-1))));
rho(2) = rho(1)*exp((-g/(R*T(2)))*((h_atm(2)-h_atm(1))/1000)); 
rho(3) = rho(2)*((T(3)/T(2))^(((-g/(a(3)*R))-1)));
rho(4) = rho(3)*((T(4)/T(3))^(((-g/(a(4)*R))-1)));
rho(5) = rho(4)*exp((-g/(R*T(5)))*((h_atm(5)-h_atm(4))/1000));
rho(6) = rho(5)*((T(6)/T(5))^(((-g/(a(5)*R))-1)));
rho(7) = rho(6)*((T(7)/T(6))^(((-g/(a(6)*R))-1)));

% 
% Altitude regions
% Using the U.S. Standard Atmosphere Lapse Rates 
% https://www.tau.ac.il/~tsirel/dump/Static/knowino.org/wiki/Atmospheric_lapse_rate.html
%

if h <= h_atm(1)
    i = 1;    
    T = T0 + a(i)*h;
    rho = rho0*(T/T0)^(-g/a0/R-1);
    
elseif h_atm(1) < h <= h_atm(2)
    i = 2; 
    T = T(i-1) + a(i)*(h - h_atm(i-1));
    rho = rho(i-1)*exp(-g/R/T(i)*(h-h_atm(i-1)));
    
elseif h_atm(2) < h <= h_atm(3) 
    i = 3; 
    T = T(i-1) + a(i)*(h - h_atm(i-1));
    rho = rho(i-1)*(T/T(i-1))^(-g/a(i-1)/R-1);
    
elseif  h_atm(3) < h <= h_atm(4)
    i = 4; 
    T = T(i-1) + a(i)*(h - h_atm(i-1)); 
    rho = rho(i-1)*(T/T(i-1))^(-g/a(i-1)/R-1); 
    
elseif h_atm(4) < h <= h_atm(5)
    i = 5; 
    T = T(i-1) + a(i)*(h - h_atm(i-1));
    rho = rho(i-1)*exp(-g/R/T(i)*(h-h_atm(i-1)));
    
elseif h_atm(5) < h <= h_atm(6)
    i = 6; 
    T = T(i-1) + a(i)*(h - h_atm(i-1));  
    rho = rho(i-1)*(T/T(i-1))^(-g/a(i-1)/R-1);  
    
elseif h_atm(6) < h <= h_atm(7)
    i = 7; 
    T = T(i-1) + a(i)*(h - h_atm(i-1)); 
    rho = rho(i-1)*(T/T(i-1))^(-g/a(i-1)/R-1);   
    
end    
end
